<div class="login-form">
    <form id="form-login" method="post" action="/account/login">

        <img style="margin-left: 60px;" src="winsystems_logo_blue.png" width="300" height="300" />
        <div class="form-group ">
            <input type="text" id="txtUser" placeholder="User Name" name="username" class="form-control col-sm-6 col-md-4" />
            <i class="fa fa-user"></i>
        </div>
        <div class="form-group log-status">
            <input type="password" id="txtPassword" placeholder="Password" name="password" class="form-control col-sm-6 col-md-4" />
            <i class="fa fa-lock"></i>
        </div>

        <button class="log-btn" onclick="loginFunc()">Log in</button>
    </form>

    @*  @if (!string.IsNullOrEmpty(ErrorMessage))
    {
    <div class="text-danger">@ErrorMessage</div>
    }*@
</div>

@section Scripts {
    <script type="text/javascript">

        const loginFunc = async () => {

            let url = '/account/login'

            let response = await fetchApi({
                "username": document.getElementById("txtUser").value,
                "password": document.getElementById("txtPassword").value
            }
            , 'POST', url);
             
            console.log(response);
        }

        const fetchApi = async (model, verb, url) => {

            console.log(verb, model, url)

            const response = await fetch(url, {
                method: verb, // *GET, POST, PUT, DELETE, etc.
                mode: 'cors', // no-cors, *cors, same-origin
                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
                credentials: 'same-origin', // include, *same-origin, omit
                headers: {
                    'Content-Type': 'application/json'
                    // 'Content-Type': 'application/x-www-form-urlencoded',
                },
                redirect: 'follow', // manual, *follow, error
                referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url
                body: JSON.stringify(model) // body data type must match "Content-Type" header
            });
            // return response.json(); // parses JSON response into native JavaScript objects

        }


    </script>
}